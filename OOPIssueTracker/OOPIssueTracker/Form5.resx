<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABUAAAAVCAYAAACpF6WWAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAQKSURBVDhPtVRdUxNXGN7rXva2f6A/oRe97p037XTGThUMJCkkLWMRoRK+kuxGILv5zmaTLEmU
        SFW0xbaopQLaUIyIGpyiCCGfBEIk1FqLZWp5es52wowkvXRnnp0579n3Oc95n/dd5o08noZgFbyNMiN1
        sx/wzdwTaxOXE0+xep86xEgG9kOyXiVI+wzsEbFxqGZ+zaCvk2tyqfy40TODW8Y5SJoIeB27KGoCe1O9
        s5jui0NslOHp4GzeBrkqvypAwasHd2LsPEqRHRRDL5AQlmE5zGPWkkAp/Cc2Ce4OLkJocPzjVgWq8qsC
        osH0Xqj5HNK+TTx2ZbHoSCMlFjHRHcOSK4dHzoyCfKCMaMsluDtMmoMcyovWMNjLviu0mK4bVT3ZiO5r
        5EjSojOtkK54Coj3P9w/hCIf2MZo6/ewtfa1k1K9TkoJ/T3s+7Z6D8Y7pzBJakZiWBBWkJFKWPasIUVU
        U/VU4aq4gaR3HWmy5zjmg63B8cqhte+627jQf8bJDCN2sg28dqD8EzGF1qtEahg/vYDhL0ax7F5TVF04
        PoaOQ10I60YUtTn/FqJkX/5sWDnoAf8EAe0ZuNvYqKKU/9wckzRhJMV1LLnzCkkx9AdoCSyHBVwz3FTq
        eZtLYMIwg5GWb2A94oS9XlRukJGeoiA/U8x0qB2vnK1mP8Pr2USYEKR8xX0T6LXH2n/EVcM00uImypFd
        FIefIxXaQCZYQkBzhph0GetDvysiaA4tBxVC+BYY23HzRZfau0evRR2nDtM6LthWyLqEFbGAX2z34NdF
        YPmUx7h5EmtyGVO9t5Xa7pOSXCpOICKZYB/7jr2Fu3OOnEwV0s1ZywOFPO0tIW5PoPdjDkKdB856P9wa
        P7Khp7g/+BgPbUlS3zKKQ89x37oEm9r+t7PN7FHcp7Dr+3Ny0zAkdRjfnryGLDEjK23hOncT7CcDyEQ3
        8V3XBBwqEZmhEhL8Ms4TA+cHH2Gu/1f4ydS5T3I+xahKb1Fioc7LGI/1rNLxpM296ilihp+HpA9h6+IO
        7CovLneOIx/cVkyiBg+oBnYFDf/S085aK/+CfdIKyABcof1KE9NiCTdMMzjbdh6jhitwNUlIyUUsuwqk
        U3KQtCH4uo1vHxzV1xYU3lNmdah5hFyftMrQM1xoH0PXR0aET4wgGSgg6d5Q9u6QCePVAy8O5lNUBSis
        5GP6J9qO/oWr3CQmzDFk5S2suNaVzigEf1Pax3mCjdTKrwpQSF3sIeGoGzH2HsrRl9g+u4usbwtrhIz2
        IzXIqrWUqA+18msG6cdkfOv5OvvepdYfMG2M45ZpjkzWz6Adwjdb8rXyKqgZpKDEspF9y/6lSRZ03JJN
        dzrN6813PV+Zj/6fwgrewMMw/wK+Qdd+S8cNXAAAAABJRU5ErkJggg==
</value>
  </data>
</root>